package ch.loway.oss.ari4java.generated;

// ----------------------------------------------------
//      THIS CLASS WAS GENERATED AUTOMATICALLY         
//               PLEASE DO NOT EDIT                    
//    Generated on: Wed Aug 30 12:35:03 CEST 2017
// ----------------------------------------------------

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.ArrayList;
import ch.loway.oss.ari4java.tools.RestException;
import ch.loway.oss.ari4java.tools.AriCallback;
import ch.loway.oss.ari4java.tools.tags.*;

/**********************************************************
 * 
 * Generated by: JavaInterface
 *********************************************************/


public interface ActionAsterisk {

// java.util.concurrent.CompletionStage<AsteriskInfo> getInfo @Nullable String
/**********************************************************
 * Gets Asterisk system information.
 * 
 * 
 * @since ari_0_0_1
 *********************************************************/
public java.util.concurrent.CompletionStage<AsteriskInfo> getInfo(@Nullable String only);



// java.util.concurrent.CompletionStage<Variable> getGlobalVar @NotNull String
/**********************************************************
 * Get the value of a global variable.
 * 
 * 
 * @since ari_0_0_1
 *********************************************************/
public java.util.concurrent.CompletionStage<Variable> getGlobalVar(@NotNull String variable);



// java.util.concurrent.CompletionStage<Void> setGlobalVar @NotNull String @Nullable String
/**********************************************************
 * Set the value of a global variable.
 * 
 * 
 * @since ari_0_0_1
 *********************************************************/
public java.util.concurrent.CompletionStage<Void> setGlobalVar(@NotNull String variable, @Nullable String value);



// java.util.concurrent.CompletionStage<List<ConfigTuple>> getObject @NotNull String @NotNull String @NotNull String
/**********************************************************
 * Retrieve a dynamic configuration object.
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public java.util.concurrent.CompletionStage<List<ConfigTuple>> getObject(@NotNull String configClass, @NotNull String objectType, @NotNull String id);



// java.util.concurrent.CompletionStage<List<ConfigTuple>> updateObject @NotNull String @NotNull String @NotNull String @Nullable Map<String,String>
/**********************************************************
 * Create or update a dynamic configuration object.
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public java.util.concurrent.CompletionStage<List<ConfigTuple>> updateObject(@NotNull String configClass, @NotNull String objectType, @NotNull String id, @Nullable Map<String,String> fields);



// java.util.concurrent.CompletionStage<Void> deleteObject @NotNull String @NotNull String @NotNull String
/**********************************************************
 * Delete a dynamic configuration object.
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public java.util.concurrent.CompletionStage<Void> deleteObject(@NotNull String configClass, @NotNull String objectType, @NotNull String id);



// java.util.concurrent.CompletionStage<List<Module>> listModules
/**********************************************************
 * List Asterisk modules.
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public java.util.concurrent.CompletionStage<List<Module>> listModules();



// java.util.concurrent.CompletionStage<Module> getModule @NotNull String
/**********************************************************
 * Get Asterisk module information.
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public java.util.concurrent.CompletionStage<Module> getModule(@NotNull String moduleName);



// java.util.concurrent.CompletionStage<Void> loadModule @NotNull String
/**********************************************************
 * Load an Asterisk module.
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public java.util.concurrent.CompletionStage<Void> loadModule(@NotNull String moduleName);



// java.util.concurrent.CompletionStage<Void> unloadModule @NotNull String
/**********************************************************
 * Unload an Asterisk module.
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public java.util.concurrent.CompletionStage<Void> unloadModule(@NotNull String moduleName);



// java.util.concurrent.CompletionStage<Void> reloadModule @NotNull String
/**********************************************************
 * Reload an Asterisk module.
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public java.util.concurrent.CompletionStage<Void> reloadModule(@NotNull String moduleName);



// java.util.concurrent.CompletionStage<List<LogChannel>> listLogChannels
/**********************************************************
 * Gets Asterisk log channel information.
 * 
 * 
 * @since ari_1_9_0
 *********************************************************/
public java.util.concurrent.CompletionStage<List<LogChannel>> listLogChannels();



// java.util.concurrent.CompletionStage<Void> addLog @NotNull String @NotNull String
/**********************************************************
 * Adds a log channel.
 * 
 * 
 * @since ari_1_9_0
 *********************************************************/
public java.util.concurrent.CompletionStage<Void> addLog(@NotNull String logChannelName, @NotNull String configuration);



// java.util.concurrent.CompletionStage<Void> deleteLog @NotNull String
/**********************************************************
 * Deletes a log channel.
 * 
 * 
 * @since ari_1_9_0
 *********************************************************/
public java.util.concurrent.CompletionStage<Void> deleteLog(@NotNull String logChannelName);



// java.util.concurrent.CompletionStage<Void> rotateLog @NotNull String
/**********************************************************
 * Rotates a log channel.
 * 
 * 
 * @since ari_1_9_0
 *********************************************************/
public java.util.concurrent.CompletionStage<Void> rotateLog(@NotNull String logChannelName);


}
;
