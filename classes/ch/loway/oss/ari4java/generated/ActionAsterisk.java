package ch.loway.oss.ari4java.generated;

// ----------------------------------------------------
//      THIS CLASS WAS GENERATED AUTOMATICALLY         
//               PLEASE DO NOT EDIT                    
//    Generated on: Thu Aug 24 16:05:00 CEST 2017
// ----------------------------------------------------

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.ArrayList;
import ch.loway.oss.ari4java.tools.RestException;
import ch.loway.oss.ari4java.tools.AriCallback;
import ch.loway.oss.ari4java.tools.tags.*;

/**********************************************************
 * 
 * Generated by: JavaInterface
 *********************************************************/


public interface ActionAsterisk {

// void deleteObject @NotNull String @NotNull String @NotNull String @NotNull AriCallback<Void> callback
/**********************************************************
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public void deleteObject(@NotNull String configClass, @NotNull String objectType, @NotNull String id, @NotNull AriCallback<Void> callback);



// void reloadModule @NotNull String @NotNull AriCallback<Void> callback
/**********************************************************
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public void reloadModule(@NotNull String moduleName, @NotNull AriCallback<Void> callback);



// void listLogChannels @NotNull AriCallback<List<LogChannel>> callback
/**********************************************************
 * 
 * 
 * @since ari_1_9_0
 *********************************************************/
public void listLogChannels(@NotNull AriCallback<List<LogChannel>> callback);



// void deleteLog @NotNull String
/**********************************************************
 * Deletes a log channel.
 * 
 * 
 * @since ari_1_9_0
 *********************************************************/
public void deleteLog(@NotNull String logChannelName) throws RestException;



// void getModule @NotNull String @NotNull AriCallback<Module> callback
/**********************************************************
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public void getModule(@NotNull String moduleName, @NotNull AriCallback<Module> callback);



// List<ConfigTuple> getObject @NotNull String @NotNull String @NotNull String
/**********************************************************
 * Retrieve a dynamic configuration object.
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public List<ConfigTuple> getObject(@NotNull String configClass, @NotNull String objectType, @NotNull String id) throws RestException;



// void addLog @NotNull String @NotNull String @NotNull AriCallback<Void> callback
/**********************************************************
 * 
 * 
 * @since ari_1_9_0
 *********************************************************/
public void addLog(@NotNull String logChannelName, @NotNull String configuration, @NotNull AriCallback<Void> callback);



// void getInfo @Nullable String @NotNull AriCallback<AsteriskInfo> callback
/**********************************************************
 * 
 * 
 * @since ari_0_0_1
 *********************************************************/
public void getInfo(@Nullable String only, @NotNull AriCallback<AsteriskInfo> callback);



// void loadModule @NotNull String
/**********************************************************
 * Load an Asterisk module.
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public void loadModule(@NotNull String moduleName) throws RestException;



// AsteriskInfo getInfo @Nullable String
/**********************************************************
 * Gets Asterisk system information.
 * 
 * 
 * @since ari_0_0_1
 *********************************************************/
public AsteriskInfo getInfo(@Nullable String only) throws RestException;



// void getObject @NotNull String @NotNull String @NotNull String @NotNull AriCallback<List<ConfigTuple>> callback
/**********************************************************
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public void getObject(@NotNull String configClass, @NotNull String objectType, @NotNull String id, @NotNull AriCallback<List<ConfigTuple>> callback);



// void unloadModule @NotNull String @NotNull AriCallback<Void> callback
/**********************************************************
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public void unloadModule(@NotNull String moduleName, @NotNull AriCallback<Void> callback);



// void setGlobalVar @NotNull String @Nullable String
/**********************************************************
 * Set the value of a global variable.
 * 
 * 
 * @since ari_0_0_1
 *********************************************************/
public void setGlobalVar(@NotNull String variable, @Nullable String value) throws RestException;



// void listModules @NotNull AriCallback<List<Module>> callback
/**********************************************************
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public void listModules(@NotNull AriCallback<List<Module>> callback);



// Variable getGlobalVar @NotNull String
/**********************************************************
 * Get the value of a global variable.
 * 
 * 
 * @since ari_0_0_1
 *********************************************************/
public Variable getGlobalVar(@NotNull String variable) throws RestException;



// void rotateLog @NotNull String @NotNull AriCallback<Void> callback
/**********************************************************
 * 
 * 
 * @since ari_1_9_0
 *********************************************************/
public void rotateLog(@NotNull String logChannelName, @NotNull AriCallback<Void> callback);



// List<ConfigTuple> updateObject @NotNull String @NotNull String @NotNull String @Nullable Map<String,String>
/**********************************************************
 * Create or update a dynamic configuration object.
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public List<ConfigTuple> updateObject(@NotNull String configClass, @NotNull String objectType, @NotNull String id, @Nullable Map<String,String> fields) throws RestException;



// void setGlobalVar @NotNull String @Nullable String @NotNull AriCallback<Void> callback
/**********************************************************
 * 
 * 
 * @since ari_0_0_1
 *********************************************************/
public void setGlobalVar(@NotNull String variable, @Nullable String value, @NotNull AriCallback<Void> callback);



// List<LogChannel> listLogChannels
/**********************************************************
 * Gets Asterisk log channel information.
 * 
 * 
 * @since ari_1_9_0
 *********************************************************/
public List<LogChannel> listLogChannels() throws RestException;



// Module getModule @NotNull String
/**********************************************************
 * Get Asterisk module information.
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public Module getModule(@NotNull String moduleName) throws RestException;



// void unloadModule @NotNull String
/**********************************************************
 * Unload an Asterisk module.
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public void unloadModule(@NotNull String moduleName) throws RestException;



// void addLog @NotNull String @NotNull String
/**********************************************************
 * Adds a log channel.
 * 
 * 
 * @since ari_1_9_0
 *********************************************************/
public void addLog(@NotNull String logChannelName, @NotNull String configuration) throws RestException;



// void deleteObject @NotNull String @NotNull String @NotNull String
/**********************************************************
 * Delete a dynamic configuration object.
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public void deleteObject(@NotNull String configClass, @NotNull String objectType, @NotNull String id) throws RestException;



// void updateObject @NotNull String @NotNull String @NotNull String @Nullable Map<String,String> @NotNull AriCallback<List<ConfigTuple>> callback
/**********************************************************
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public void updateObject(@NotNull String configClass, @NotNull String objectType, @NotNull String id, @Nullable Map<String,String> fields, @NotNull AriCallback<List<ConfigTuple>> callback);



// void loadModule @NotNull String @NotNull AriCallback<Void> callback
/**********************************************************
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public void loadModule(@NotNull String moduleName, @NotNull AriCallback<Void> callback);



// List<Module> listModules
/**********************************************************
 * List Asterisk modules.
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public List<Module> listModules() throws RestException;



// void rotateLog @NotNull String
/**********************************************************
 * Rotates a log channel.
 * 
 * 
 * @since ari_1_9_0
 *********************************************************/
public void rotateLog(@NotNull String logChannelName) throws RestException;



// void getGlobalVar @NotNull String @NotNull AriCallback<Variable> callback
/**********************************************************
 * 
 * 
 * @since ari_0_0_1
 *********************************************************/
public void getGlobalVar(@NotNull String variable, @NotNull AriCallback<Variable> callback);



// void reloadModule @NotNull String
/**********************************************************
 * Reload an Asterisk module.
 * 
 * 
 * @since ari_1_8_0
 *********************************************************/
public void reloadModule(@NotNull String moduleName) throws RestException;



// void deleteLog @NotNull String @NotNull AriCallback<Void> callback
/**********************************************************
 * 
 * 
 * @since ari_1_9_0
 *********************************************************/
public void deleteLog(@NotNull String logChannelName, @NotNull AriCallback<Void> callback);


}
;
